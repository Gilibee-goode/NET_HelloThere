# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:  
  name: Default 

#trigger: none 

trigger:
- main

variables:
- group: Version
- name: buildPlatform
  value: 'Any CPU'
- name: artifactName
  value: '$(Build.SourceBranchName)_$(Build.BuildId)' # Versioning based on branch and build ID
- name: buildConfiguration
  value: 'Release'
- name: Counter
  value: $[counter(variables['Patch'], 0)]
- name: EndVersion
  value: $(Major).$(Minor).$(Patch).$(Counter)
- name: Branch
  value: $[ replace(variables['Build.SourceBranch'], 'refs/heads/', '') ]



steps: 

- task: DotNetCoreCLI@2
  displayName: "dotnet build and pack"
  inputs:
    command: 'pack'
    arguments: '/p:Version=$(EndVersion) /p:PackageVersion=$(EndVersion) --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    versioningScheme: byEnvVar
    versionEnvVar: EndVersion
    packagesToPack: '**/*.csproj'    

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: '$(artifactName)'


- task: NuGetCommand@2
  displayName: 'Publish ffs'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'd14b5625-c3e7-4a56-8e0f-fd7658241d50/c9382249-0c9c-40c8-9e47-6546453a072c'
    allowPackageConflicts: true

